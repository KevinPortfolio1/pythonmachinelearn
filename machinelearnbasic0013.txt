train_test_split() 
是 Scikit-learn 中最常用的函數之一，用來將資料集分割成 訓練集（training set） 和 測試集（testing set），
這樣可以用來訓練模型並驗證其泛化能力。

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(
    X, y, 
    test_size=0.2,     # 或 train_size=0.8
    random_state=42,   # 設定亂數種子，使結果可重現
    shuffle=True,      # 是否在分割前打亂資料
    stratify=y         # 分層抽樣，保持 y 的類別分布
)


| 參數             | 說明                                       |
| -------------- | ---------------------------------------- |
| `X`            | 特徵資料（例如 DataFrame 或 NumPy 陣列）            |
| `y`            | 標籤資料（例如 類別標籤或目標變數）                       |
| `test_size`    | 測試資料佔全部資料的比例（0\~1之間）或直接給定數量（如 100）       |
| `train_size`   | 訓練資料比例（和 test\_size 至少指定一個）              |
| `random_state` | 隨機種子，確保每次分割結果一樣                          |
| `shuffle`      | 是否在分割前先打亂資料（預設為 `True`）                  |
| `stratify`     | 用於分類任務：根據 `y` 的類別比例來分層抽樣，避免訓練/測試資料類別分布不均 |


from sklearn.model_selection import train_test_split
from sklearn.datasets import load_iris

# 載入 iris 資料集
iris = load_iris()
X = iris.data
y = iris.target

# 分割資料集：80%訓練、20%測試，保留類別分布
X_train, X_test, y_train, y_test = train_test_split(
    X, y, 
    test_size=0.2, 
    random_state=1,
    stratify=y
)

print("訓練資料筆數：", len(X_train))
print("測試資料筆數：", len(X_test))


📊 為什麼使用 train_test_split？

模型評估要客觀：不能只用訓練資料來評估模型效能，否則容易過擬合（overfitting）。

避免資料洩漏（data leakage）：若不正確地分割資料，可能會讓模型提前「看見」測試資料。

保持類別分布一致（分類問題）：使用 stratify=y 可以防止訓練和測試集中某些類別被抽太多或太少


擬合（overfitting）
「將訓練資料帶入模型，讓模型學習輸入（特徵 X）與輸出（目標 y）之間的對應關係。」

| 類型                    | 擬合的目的是什麼？            |
| --------------------- | -------------------- |
| **監督式學習**             | 找出特徵與標籤的關係，例如分類、回歸   |
| **非監督式學習**            | 找出資料中的結構，例如分群、降維     |
| **過擬合（Overfitting）**  | 模型過度記住訓練資料 → 對新資料表現差 |
| **欠擬合（Underfitting）** | 模型太簡單，無法掌握資料的規律      |

